; vim: ft=nasm ts=2 sw=2 expandtab
%ifndef PUTSTR_H
%define PUTSTR_H

extern putstr_32
extern putstr_64
extern putstr_current_line


; macro puts {{{
%macro PUTS 1-*
 jmp %%code

 section .data
  %%str: db %1, 0
 section .text
 %%code:

  %if __BITS__ == 32
    mov esi, %%str
    call putstr_32
  %else

    push r8

    %if %0 > 1
      push r9
      %rep %0 - 1
        push %2
        %rotate 1
      %endrep
      mov r9, rsp
    %endif

    mov r8, %%str
    call putstr_64

    %if %0 > 1
      add rsp, (%0 - 1) * 8
      pop r9
    %endif
    pop r8

  %endif
%endmacro
; }}}


;; Save all registers and put string
;; Only 64 bit version
; macro safe_puts {{{
%macro SAFE_PUTS 1
 section .data
  %%str: db %1, 0
 section .text
  push rax
  push rbx
  push rcx
  push rdx
  push rsi
  push rdi
  push rbp

  mov r8, %%str
  call putstr_64

  pop rbp
  pop rdi
  pop rsi
  pop rdx
  pop rcx
  pop rbx
  pop rax
%endmacro
; }}}

%endif ;;PUTSTR_H
